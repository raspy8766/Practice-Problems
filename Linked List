/*
 * Implement a linked list using the pseudoclassical instantiation pattern.
 *
 * Your linked list should have methods called "addToTail", "removeHead", and "contains."
 *
 */

// EXAMPLE USAGE:
var list = new LinkedList();
list.tail.value;   //yields 'null'
list.addToTail(4);
list.addToTail(5);
list.head.value;   //yields '4';
list.contains(5);  //yields 'true';
list.contains(6);  //yields 'false';
list.removeHead(); //yields '4'
list.tail.value;   //yields '5';

var LinkedList = function() {
  this.tail = null;
  this.head = null;
};

LinkedList.prototype.addToTail = function (val) {
  var createNode = function(val) {
    return {
      value: val,
      next: this.tail
    }
  };
  newNode = createNode.call(this, val);
  this.head = this.head || newNode;
  this.tail = newNode;
};

LinkedList.prototype.contains = function(val) {
  currentNode = this.tail;
  while (currentNode !== null) {
    if (currentNode.value === val) {
      return true;
    }
    currentNode = currentNode.next;
  }
  return false;
}

